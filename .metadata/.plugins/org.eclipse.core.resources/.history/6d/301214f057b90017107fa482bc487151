package aidEval;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.JsonPrimitive;
import com.google.gson.stream.JsonReader;

public class JsonCodeParser {
	
	// json process method
	public void processJson() {
			String jsonStr = "{\"problemNum\":1,\"originalCodeString\":\"def sum(a, b):\\n    s = a + b\\n    return s\\n\\r\\ntotal = sum(4, 7)\\r\\nprint(total)\",\"blankCodeString\":\"def sum(a, b):\\n#문세 시작 줄 주석\\n\\n\\n\\n#문제 끝 줄 주석\\n\\r\\n#문제 시작 줄 주석2\\n\\n\\n\\n#문제 시작 줄 주석2\",\"parseCodeArray\":[{\"type\":\"cm-keyword\",\"code\":\"def\"},{\"type\":\"cm-builtin\",\"code\":\"sum\"},{\"type\":\"cm-variable\",\"code\":\"a\"},{\"type\":\"cm-variable\",\"code\":\"b\"},{\"type\":\"cm-variable\",\"code\":\"s\"},{\"type\":\"cm-operator\",\"code\":\"=\"},{\"type\":\"cm-variable\",\"code\":\"a\"},{\"type\":\"cm-operator\",\"code\":\"+\"},{\"type\":\"cm-variable\",\"code\":\"b\"},{\"type\":\"cm-keyword\",\"code\":\"return\"},{\"type\":\"cm-variable\",\"code\":\"s\"},{\"type\":\"\",\"code\":\" \"},{\"type\":\"cm-variable\",\"code\":\"total\"},{\"type\":\"cm-operator\",\"code\":\"=\"},{\"type\":\"cm-builtin\",\"code\":\"sum\"},{\"type\":\"cm-number\",\"code\":\"4\"},{\"type\":\"cm-number\",\"code\":\"7\"},{\"type\":\"cm-builtin\",\"code\":\"print\"},{\"type\":\"cm-variable\",\"code\":\"total\"}]}";
			
			JsonParser parser = new JsonParser();
			JsonElement rootNode = parser.parse(jsonStr);
			
			if(rootNode.isJsonObject()) {
				JsonObject first = rootNode.getAsJsonObject();
				JsonElement pbnNode = first.get("problemNum");
				System.out.println("PBN:"+pbnNode.getAsDouble());
				
				JsonArray parseCodeArray = first.getAsJsonArray("parseCodeArray");
				handleJsonArray(parseCodeArray);
			
			}
			
			
	}
	
	public void handleJsonArray(JsonArray input) {
		String jsonArrStr = input.toString();
		JsonParser parser = new JsonParser();
		JsonElement base = parser.parse(jsonArrStr);
		
		if(base.isJsonObject()) {
			JsonObject first = base.getAsJsonObject();
			JsonElement type = first.get("type");
			System.out.println(type.toString());
		}
	}
	
	public class JsonCodeBase {
		double problemNum;
		String originalCodeString;
		String uid;
		String[] type;
		String[] code;
		
		public double getProblemNum() {
			return problemNum;
		}
		public void setProblemNum(double problemNum) {
			this.problemNum = problemNum;
		}
		public String getOriginalCodeString() {
			return originalCodeString;
		}
		public void setOriginalCodeString(String originalCodeString) {
			this.originalCodeString = originalCodeString;
		}
		public String getUid() {
			return uid;
		}
		public void setUid(String uid) {
			this.uid = uid;
		}
		public String[] getType() {
			return type;
		}
		public void setType(String[] type) {
			this.type = type;
		}
		public String[] getCode() {
			return code;
		}
		public void setCode(String[] code) {
			this.code = code;
		}
	}

}
